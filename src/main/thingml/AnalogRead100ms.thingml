/**
File: Blink100ms.thingml

Fesult:	Once compiled and executed this will turn a LED on and off every 100ms

HardWare required: 	Arduino Uno compatible board
					a LED
					a button
					
Feature taken up: 	- 100ms_interrupt
					- (see also 4ms_interrupt)
					
TODO: compile and run 

TODO: chronometer: write a chronometer which start when the button is pressed and stop when pressed again (see PingPong to use timer_start and timeout)
*/

import "lib/_Arduino.thingml"

configuration ArduinoSketchCfg {
	instance arduinoScheduler:  ArduinoScheduler
	instance application: ArduinoSketch
	connector application.arduino => arduinoScheduler.arduino
}

thing ArduinoSketch includes ArduinoApplication
{
	
	readonly property LED : UInt8 = 13
	readonly property INPUT : UInt8 = 'A0'

	statechart ArduinoTimerStateChart init OFF {

		on entry do
			arduino!setOutput(LED) // init
			arduino!setInput(INPUT) // init
		end

		state OFF {
			on entry arduino!setDigitalHigh(LED)
			transition -> ON event arduino?100ms_interrupt //handeling of the arduino 100ms interrupt
		}
		state ON {
			on entry do
				
				arduino!setDigitalLow(LED)
			end
			transition -> OFF event arduino?100ms_interrupt
		}
	}
}